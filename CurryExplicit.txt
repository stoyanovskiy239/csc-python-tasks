В питоне арность (местность, количество аргументов) функции произвольна и даже не ограничена: такие функции, как print(), принимают столько аргументов, сколько им дадут. Поэтому карринг в его первозданном виде - затруднён, а то и невозможен: когда остановиться?

Упростим себе задачу. Будем указывать арность явно.
Напишите функцию curry_explicit(function, arity) и парную к ней uncurry_explicit(function, arity)

Будем считать, что

пользователь верно указал арность переданной функции
если он ошибся, то пусть сам интерпретатор питона его накажет исключением - нам не надо проверять самостоятельно ничего
отрицательная арность невозможна (добавьте assert, этого достаточно)
при арности 0 результатом будет функция от 0 параметров: curry_explicit(f,0)() == f()
при арности 1 - функция от 1 параметра: curry_explicit(f,1)(x) == f(x)
не забудьте, что есть произвольно-арные функции, такие как print(); наша curry_explicit должна замораживать их арность, т.е. нельзя написать curry_explicit(print,2)(1)(2)(3,4,5)
именованные аргументы поддерживать не нужно